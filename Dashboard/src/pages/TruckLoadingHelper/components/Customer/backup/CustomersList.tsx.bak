import React, { useState } from 'react';
import { Search, X, HelpCircle, Users, Plus } from 'lucide-react';
import { useTruckLoading } from '../../context/TruckLoadingContext';
import OnboardingHelpDialog from '../Onboarding/OnboardingHelpDialog';

interface CustomersListProps {
  showAddCustomerButton?: boolean;
}

const CustomersList: React.FC<CustomersListProps> = ({ showAddCustomerButton = true }) => {
  const { customers, selectCustomer, addCustomer } = useTruckLoading();
  const [searchTerm, setSearchTerm] = useState('');
  const [showAddCustomerForm, setShowAddCustomerForm] = useState(false);
  const [newCustomerName, setNewCustomerName] = useState('');
  const [newCustomerEmail, setNewCustomerEmail] = useState('');
  const [showOnboardingHelp, setShowOnboardingHelp] = useState(false);
  
  // Filter customers based on search term
  const filteredCustomers = customers.filter(customer => 
    customer.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleSubmitNewCustomer = (e: React.FormEvent) => {
    e.preventDefault();
    if (newCustomerName.trim()) {
      addCustomer(newCustomerName.trim(), newCustomerEmail.trim());
      setNewCustomerName('');
      setNewCustomerEmail('');
      setShowAddCustomerForm(false);
    }
  };

  return (
    <div className="space-y-6">
      <section>
        <h2 className="text-xl font-semibold mb-4 flex items-center">
          <Users size={20} className="text-accent mr-2" />
          Customers
          <button 
            onClick={() => setShowOnboardingHelp(true)}
            className="ml-2 p-1.5 text-muted-foreground hover:text-accent transition-colors"
            title="How to add customers"
            aria-label="View help for adding customers"
          >
            <HelpCircle size={16} />
          </button>
        </h2>
        
        <div className="flex flex-col md:flex-row justify-between gap-4 mb-6">
          <div className="relative">
            <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <Search size={18} style={{color: 'var(--muted-foreground)'}} />
            </div>
            <input
              type="text"
              placeholder="Search customers..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="pl-10 pr-4 py-2 border rounded-md w-full md:w-80 focus:outline-none focus:ring-1 focus:ring-accent"
              style={{backgroundColor: 'var(--muted)', borderColor: 'var(--border)'}}            
            />
            {searchTerm && (
              <button 
                onClick={() => setSearchTerm('')}
                className="absolute right-2 top-1/2 transform -translate-y-1/2 text-muted-foreground hover:text-foreground p-1"
                aria-label="Clear search"
              >
                <X size={16} />
              </button>
            )}
          </div>
          
          {showAddCustomerButton && (
            <button 
              onClick={() => setShowAddCustomerForm(true)}
              className="bg-accent text-white py-2 px-4 rounded-md hover:bg-accent/90 transition-colors flex items-center"
            >
              <Plus size={18} className="mr-2" />
              Add Customer
            </button>
          )}
        </div>
        {/* Customers list */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredCustomers.length > 0 ? (
            filteredCustomers.map((customer) => (
            <div
              key={customer.id}
              onClick={() => selectCustomer(customer)}
              className="dashboard-card rounded-lg hover:border-accent transition-colors overflow-hidden group cursor-pointer"
            >
              <div className="p-6">
                <div className="flex justify-between items-start mb-4">
                  <div className="p-3 rounded-md bg-accent/10">
                    <Users size={24} className="text-accent" />
                  </div>
                  <div className="text-xs py-1 px-2 rounded-full" style={{backgroundColor: 'var(--accent-background)', color: 'var(--accent)'}}>
                    {customer.orders.length > 0 ? `${customer.orders.length} Orders` : 'New'}
                  </div>
                </div>
                <h3 className="font-medium text-lg mb-2 truncate">{customer.name}</h3>
                <p className="text-sm mb-4" style={{color: 'var(--muted-foreground)'}}>
                  {customer.email || 'No email provided'}
                </p>
                <div className="flex justify-between items-center">
                  <span className="text-xs" style={{color: 'var(--muted-foreground)'}}>
                    {customer.orders.filter(order => order.status === 'pending').length} pending orders
                  </span>
                  <X size={16} className="text-accent opacity-0 group-hover:opacity-100 transition-opacity" />
                </div>
              </div>
            </div>
          ))
        ) : (
          <div className="col-span-full p-8 text-center dashboard-card">
            <p className="text-muted-foreground mb-2">No customers found</p>
            <p className="text-sm text-muted-foreground">Try adjusting your search or add a new customer</p>
          </div>
        )}
      </div>
    </section>
  </div>

  {/* Add Customer Modal */}
  {showAddCustomerForm && (
    <div className="fixed inset-0 bg-black/40 dark:bg-black/60 flex items-center justify-center z-50 p-4">
      <div className="dashboard-card max-w-md w-full rounded-lg">
        <div className="p-6">
          <div className="flex justify-between items-center mb-6">
            <h3 className="text-lg font-medium">Add New Customer</h3>
            <button
              onClick={() => setShowAddCustomerForm(false)}
              className="text-muted-foreground p-1 hover:text-foreground rounded-sm"
              aria-label="Close dialog"
            >
              <X size={18} />
            </button>
          </div>

          <form onSubmit={handleSubmitNewCustomer}>
            <div className="space-y-4">
              <div>
                <label htmlFor="customerName" className="block text-sm font-medium mb-1">
                  Customer Name *
                </label>
                <input
                  id="customerName"
                  type="text"
                  value={newCustomerName}
                  onChange={(e) => setNewCustomerName(e.target.value)}
                  className="w-full p-2 rounded-md border focus:outline-none focus:ring-1 focus:ring-accent"
                  style={{backgroundColor: 'var(--muted)', borderColor: 'var(--border)'}}
                  required
                  placeholder="Enter customer name"
                />
              </div>

              <div>
                <label htmlFor="customerEmail" className="block text-sm font-medium mb-1">
                  Email Address
                </label>
                <input
                  id="customerEmail"
                  type="email"
                  value={newCustomerEmail}
                  onChange={(e) => setNewCustomerEmail(e.target.value)}
                  className="w-full p-2 rounded-md border border-muted bg-background focus:outline-none focus:ring-1 focus:ring-accent"
                  placeholder="Enter email address"
                />
              </div>

              <div className="bg-accent/10 dark:bg-accent/20 p-3 rounded-md">
                <p className="text-accent text-sm">
                  <strong>Note:</strong> For better results, we recommend adding customers by forwarding their order emails to orders@onusphere.com
                </p>
              </div>

              <div className="flex justify-end gap-3 pt-2">
            <div className="p-6">
              <div className="flex justify-between items-center mb-6">
                <h3 className="text-lg font-medium">Add New Customer</h3>
                <button
                  onClick={() => setShowAddCustomerForm(false)}
                  className="text-muted-foreground p-1 hover:text-foreground rounded-sm"
                  aria-label="Close dialog"
                >
                  <X size={18} />
                </button>
              </div>

              <form onSubmit={handleSubmitNewCustomer}>
                <div className="space-y-4">
                  <div>
                    <label htmlFor="customerName" className="block text-sm font-medium mb-1">
                      Customer Name *
                    </label>
                    <input
                      id="customerName"
                      type="text"
                      value={newCustomerName}
                      onChange={(e) => setNewCustomerName(e.target.value)}
                      className="w-full p-2 rounded-md border focus:outline-none focus:ring-1 focus:ring-accent"
                      style={{backgroundColor: 'var(--muted)', borderColor: 'var(--border)'}}
                      required
                      placeholder="Enter customer name"
                    />
                  </div>

                  <div>
                    <label htmlFor="customerEmail" className="block text-sm font-medium mb-1">
                      Email Address
                    </label>
                    <input
                      id="customerEmail"
                      type="email"
                      value={newCustomerEmail}
                      onChange={(e) => setNewCustomerEmail(e.target.value)}
                      className="w-full p-2 rounded-md border border-muted bg-background focus:outline-none focus:ring-1 focus:ring-accent"
                      placeholder="Enter email address"
                    />
                  </div>

                  <div className="bg-accent/10 dark:bg-accent/20 p-3 rounded-md">
                    <p className="text-accent text-sm">
                      <strong>Note:</strong> For better results, we recommend adding customers by forwarding their order emails to orders@onusphere.com
                    </p>
                  </div>

                  <div className="flex justify-end gap-3 pt-2">
                    <button
                      type="button"
                      onClick={() => setShowAddCustomerForm(false)}
                      className="py-2 px-4 border border-muted dark:border-gray-700 rounded-md text-sm font-medium hover:bg-muted dark:hover:bg-gray-800 transition-colors"
                    >
                      Cancel
                    </button>
                    <button
                      type="submit"
                      className="bg-accent text-white py-2 px-4 rounded-md text-sm font-medium hover:bg-accent/90 dark:bg-accent dark:hover:bg-accent/90 transition-colors"
                      disabled={!newCustomerName.trim()}
                    >
                      Add Customer
                    </button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      )}

      {/* Onboarding Help Modal */}
      {showOnboardingHelp && (
        <OnboardingHelpDialog onClose={() => setShowOnboardingHelp(false)} />
      )}
    </div>
  );
};

export default CustomersList;
